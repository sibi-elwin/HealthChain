/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MedicalRecords,
  MedicalRecordsInterface,
} from "../MedicalRecords";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "AccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "AccessRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "uploader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "RecordAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControlContract",
    outputs: [
      {
        internalType: "contract AccessControlContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "fileType",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "addRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
    ],
    name: "getPatientRecordIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "getRecord",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "address",
            name: "uploader",
            type: "address",
          },
          {
            internalType: "address",
            name: "patient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fileType",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct MedicalRecordContract.Record",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "grantAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "patientDoctorAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "address",
        name: "uploader",
        type: "address",
      },
      {
        internalType: "address",
        name: "patient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "fileType",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "doctor",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060405161169d38038061169d833981016040819052602c916055565b6001600081905580546001600160a01b0319166001600160a01b03929092169190911790556083565b600060208284031215606657600080fd5b81516001600160a01b0381168114607c57600080fd5b9392505050565b61160b806100926000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636248204e1161005b5780636248204e1461011c578063761ab9fc1461013c57806385e685311461017a578063e8fb46961461018d57600080fd5b806303e9e6091461008d5780630ae5e739146100b657806321fcc185146100cb57806334461067146100f6575b600080fd5b6100a061009b3660046110b7565b6101a0565b6040516100ad9190611116565b60405180910390f35b6100c96100c43660046111cb565b6104a4565b005b6001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100ad565b6101096101043660046110b7565b610756565b6040516100ad97969594939291906111ed565b61012f61012a3660046111cb565b61093a565b6040516100ad9190611258565b61016a61014a36600461129b565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ad565b6100c96101883660046111cb565b610a2c565b6100c961019b366004611373565b610baa565b6101f26040518060e00160405280600081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160608152602001606081525090565b6000600260008481526020019081526020016000206040518060e00160405290816000820154815260200160018201805461022c90611418565b80601f016020809104026020016040519081016040528092919081815260200182805461025890611418565b80156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b505050918352505060028201546001600160a01b0390811660208301526003830154166040820152600482015460608201526005820180546080909201916102ec90611418565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611418565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050815260200160068201805461037e90611418565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90611418565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081525050905080606001516001600160a01b0316336001600160a01b0316148061044d575060608101516001600160a01b0316600090815260046020908152604080832033845290915290205460ff165b61049e5760405162461bcd60e51b815260206004820152601860248201527f4e6f2061636365737320746f2074686973207265636f7264000000000000000060448201526064015b60405180910390fd5b92915050565b6001546040805163ac5cb97d60e01b815290516001600160a01b03909216916391d1485491839163ac5cb97d916004808201926020929091908290030181865afa1580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a9190611452565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610580919061146b565b6105cc5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792070617469656e74732063616e206772616e742061636365737300006044820152606401610495565b60015460408051637f6198f960e11b815290516001600160a01b03909216916391d1485491839163fec331f2916004808201926020929091908290030181865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611452565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0384166024820152604401602060405180830381865afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b1919061146b565b6106fd5760405162461bcd60e51b815260206004820152601960248201527f446f63746f72206d7573742062652072656769737465726564000000000000006044820152606401610495565b3360008181526004602090815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092917f9f520b3bfc56d06f7065d10b4683b3f57ac8895d5026cd176dee95ce1454cb8d91a350565b6002602052600090815260409020805460018201805491929161077890611418565b80601f01602080910402602001604051908101604052809291908181526020018280546107a490611418565b80156107f15780601f106107c6576101008083540402835291602001916107f1565b820191906000526020600020905b8154815290600101906020018083116107d457829003601f168201915b5050505060028301546003840154600485015460058601805495966001600160a01b0394851696949093169450909261082990611418565b80601f016020809104026020016040519081016040528092919081815260200182805461085590611418565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b5050505050908060060180546108b790611418565b80601f01602080910402602001604051908101604052809291908181526020018280546108e390611418565b80156109305780601f1061090557610100808354040283529160200191610930565b820191906000526020600020905b81548152906001019060200180831161091357829003601f168201915b5050505050905087565b6060336001600160a01b038316148061097657506001600160a01b038216600090815260046020908152604080832033845290915290205460ff165b6109c25760405162461bcd60e51b815260206004820152601c60248201527f4e6f2061636365737320746f2070617469656e74207265636f726473000000006044820152606401610495565b6001600160a01b03821660009081526003602090815260409182902080548351818402810184019094528084529091830182828015610a2057602002820191906000526020600020905b815481526020019060010190808311610a0c575b50505050509050919050565b6001546040805163ac5cb97d60e01b815290516001600160a01b03909216916391d1485491839163ac5cb97d916004808201926020929091908290030181865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611452565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b08919061146b565b610b545760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792070617469656e74732063616e207265766f6b6520616363657373006044820152606401610495565b3360008181526004602090815260408083206001600160a01b0386168085529252808320805460ff19169055519092917f825c8be24eb0df19500f63e86c29e7d0d951e73056b889b891d85e40938d9b6e91a350565b610bb261105e565b60015460408051637f6198f960e11b815290516001600160a01b03909216916391d1485491839163fec331f2916004808201926020929091908290030181865afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c289190611452565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e919061146b565b80610d70575060015460408051635e98386360e11b815290516001600160a01b03909216916391d1485491839163bd3070c6916004808201926020929091908290030181865afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a9190611452565b6040516001600160e01b031960e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d70919061146b565b610dc85760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920646f63746f7273206f72206c6162732063616e20616464207265636044820152636f72647360e01b6064820152608401610495565b6001546040805163ac5cb97d60e01b815290516001600160a01b03909216916391d1485491839163ac5cb97d916004808201926020929091908290030181865afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e9190611452565b6040516001600160e01b031960e084901b16815260048101919091526001600160a01b0387166024820152604401602060405180830381865afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead919061146b565b610ef95760405162461bcd60e51b815260206004820152601a60248201527f50617469656e74206d75737420626520726567697374657265640000000000006044820152606401610495565b60058054906000610f098361148d565b90915550506005546040805160e081018252828152602080820187815233838501526001600160a01b038916606084015242608084015260a0830187905260c08301869052600085815260029092529290208151815591519091906001820190610f739082611503565b5060408201516002820180546001600160a01b039283166001600160a01b03199182161790915560608401516003840180549190931691161790556080820151600482015560a08201516005820190610fcc9082611503565b5060c08201516006820190610fe19082611503565b5050506001600160a01b0385166000818152600360209081526040808320805460018101825590845291909220018390555133919083907f8b89a108a90c0548df87d0b892af02aada445db6540619595841bfd5e15ffd7c906110459089906115c2565b60405180910390a4506110586001600055565b50505050565b6002600054036110b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610495565b6002600055565b6000602082840312156110c957600080fd5b5035919050565b6000815180845260005b818110156110f6576020818501810151868301820152016110da565b506000602082860101526020601f19601f83011685010191505092915050565b60208152815160208201526000602083015160e0604084015261113d6101008401826110d0565b905060018060a01b03604085015116606084015260018060a01b036060850151166080840152608084015160a084015260a0840151601f198483030160c085015261118882826110d0565b91505060c0840151601f198483030160e08501526111a682826110d0565b95945050505050565b80356001600160a01b03811681146111c657600080fd5b919050565b6000602082840312156111dd57600080fd5b6111e6826111af565b9392505050565b87815260e06020820152600061120660e08301896110d0565b6001600160a01b038881166040850152871660608401526080830186905282810360a084015261123681866110d0565b905082810360c084015261124a81856110d0565b9a9950505050505050505050565b602080825282518282018190526000918401906040840190835b81811015611290578351835260209384019390920191600101611272565b509095945050505050565b600080604083850312156112ae57600080fd5b6112b7836111af565b91506112c5602084016111af565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126112f557600080fd5b813567ffffffffffffffff81111561130f5761130f6112ce565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561133e5761133e6112ce565b60405281815283820160200185101561135657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561138957600080fd5b611392856111af565b9350602085013567ffffffffffffffff8111156113ae57600080fd5b6113ba878288016112e4565b935050604085013567ffffffffffffffff8111156113d757600080fd5b6113e3878288016112e4565b925050606085013567ffffffffffffffff81111561140057600080fd5b61140c878288016112e4565b91505092959194509250565b600181811c9082168061142c57607f821691505b60208210810361144c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561146457600080fd5b5051919050565b60006020828403121561147d57600080fd5b815180151581146111e657600080fd5b6000600182016114ad57634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156114fe57806000526020600020601f840160051c810160208510156114db5750805b601f840160051c820191505b818110156114fb57600081556001016114e7565b50505b505050565b815167ffffffffffffffff81111561151d5761151d6112ce565b6115318161152b8454611418565b846114b4565b6020601f821160018114611565576000831561154d5750848201515b600019600385901b1c1916600184901b1784556114fb565b600084815260208120601f198516915b828110156115955787850151825560209485019460019092019101611575565b50848210156115b35786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6020815260006111e660208301846110d056fea264697066735822122037890e6da6b4a0c87d73ba6a2be02585ba2740440d07e707a8cf356c2a88c87f64736f6c634300081c0033";

type MedicalRecordsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MedicalRecordsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MedicalRecords__factory extends ContractFactory {
  constructor(...args: MedicalRecordsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _accessControl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MedicalRecords> {
    return super.deploy(
      _accessControl,
      overrides || {}
    ) as Promise<MedicalRecords>;
  }
  override getDeployTransaction(
    _accessControl: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_accessControl, overrides || {});
  }
  override attach(address: string): MedicalRecords {
    return super.attach(address) as MedicalRecords;
  }
  override connect(signer: Signer): MedicalRecords__factory {
    return super.connect(signer) as MedicalRecords__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MedicalRecordsInterface {
    return new utils.Interface(_abi) as MedicalRecordsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MedicalRecords {
    return new Contract(address, _abi, signerOrProvider) as MedicalRecords;
  }
}
